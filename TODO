TODO:
Second Round:
-Recommender system that applies default weight and chooses at random if weight is near the default
    Restaurant score is a function of 
        1. Source count
        2. Recommendation count
        With filters on location, type, etc.
        So really, scores can be cached and updated with every new recommendation
-(DONE)Admin Page
    -(DONE)Authorization
    -(DONE)Easy upload function to upload new restaurant data
-Ability to select sources
-Recommendations will filter on selected sources
-Recommender system that weights on multiple sources
-Seed Heroku Database
-Fix up Frontend
-Rename 'Source'
-Add Recommendation Groups
Third Round:
-User accounts to store preferences
-User Authentication
-Recommender system that weights on sources which are trusted
-Paginate results
Fourth Round:
-Location search that limits results to certain area
-Recommender system that weights on sources specific for recently searched locations
Fifth Round:
-Cool responsive frontend display and filter for restaurants
-Add "Don't Show this Again"
-Add "Tried"
Later:
-Move category into separate model
-Automatic up-to-date for recommendations
-Recommender system that weights on sources specific for type of food
-Fix up admin upload to show more info
(DONE)First round:
-(DONE)Set up Postgres
-(DONE)Deploy to Heroku
-(DONE)Seed database
-(DONE)Specify source categories

Bugs:
-Make notice hidden

Tests:
-Recommender
-Uploading
-Frontend

Models:
User
    preferences
    recent_locations
Restaurant
    name
    later:
        (4)geolocation data
        (5)website
        (l)food type
        images
Source
    name
    description
    category
    website
Recommendation
    restaurant
    source
    date
    website
