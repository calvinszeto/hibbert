TODO:
-Recommender system that applies default weight and chooses at random if weight is near the default
-Otherwise, recommender gives restaurants which have the most sources, and then the most recommendations
-Plan out complete backend API 
-Write rspec expectations for API 
-Code out backend
-Fix up Frontend
    -Plan out JS framework
-Improve manual uploading
-Seed Heroku Database
-Add Images to Restaurants and Sources
-Add Recommendation Groups
-User accounts to store preferences
-User Authentication
-Ability to select sources
-Recommendations will filter on selected sources
-Paginate results
-Location search that limits results to certain area
-Recommender system that weights on sources specific for recently searched locations
-Add "Don't Show this Again"
-Add "Tried"
-Move category into separate model
-Automatic up-to-date for recommendations
-Recommender system that weights on sources specific for type of food
(DONE)First round:
-(DONE)Set up Postgres
-(DONE)Deploy to Heroku
-(DONE)Seed database
-(DONE)Specify source categories
-(DONE)Admin Page
    -(DONE)Authorization
    -(DONE)Easy upload function to upload new restaurant data

Tests:
-Recommender
-Uploading
-Counts get updated correctly
-Frontend
