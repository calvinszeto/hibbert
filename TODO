TODO:
-Add Pagination to Backend
-Alerts
    Bad search location
    Disconnection from server
-Images
    -Add Images to Restaurants and Sources
    -Default images based on category if no images are found
    -Change out hardcoded images
-Add Usernames to user/auth
-Deploy
    -Add Bower to Heroku postinstall script
-Optimization
    -MOBILEMOBILEMOBILE
    -Organize Angular Files
    -Refactor all "show" modals to be separate from the list, i.e. the modal becomes its own "browser"
    -Move out all erb so that the frontend can be tested with karma
    -Maps API
    -Refactor Angular App
        Create directives for common elements
        Add validations to RestaurantQuery service
    -Refactor out all hard numbers and error messages 
        source controller spec 
        both location using controllers
        error messages in source and restaurant index views
    -Rewrite specs to use FactoryGirl's create_list
    -Rewrite UsersController specs with expect..change
    -Refactor Source location search
    -Add uploading of categories for restaurants
    -Recommender system that applies default weight and chooses at random if weight is near the default
    -Remove unwanted Devise modules
    -Move to memcached/memcashier for views(fragment caching) and for geocoding
    -Grab custom Foundation with only parts that are used
-Admin
    -Plan out admin backend API
    -Write rspec expectations of admin API
    -Code out admin stuff
    -Improve manual uploading
-Content
    -Seed Heroku Database
    -Automatic up-to-date for recommendations
-Future Plans
    -Welcome screen and tutorials
    -Fix up Address to save full address text
    -Add User Favorites
    -Add more fine tuning btwn ordering by location vs. ordering by recommendations
    -Search recommendation groups based on restaurant
    -Allow regular users to make personal sources/recommendations
    -Connect with other regular users to see their personal sources/recommendations
    -Perhaps allow regular users to edit sources and stuff
