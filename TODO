TODO:
-Add categories to backend API
-Code up Frontend
    -Decide on how to split up application
        -restaurants
            -service
            -list
            -show
        -sources
            -service
            -list
            -show
            -recommendation groups
                -service
                -show
        -search options/filters
            New plan is to put it inside the nav bar, with separate controllers.
        -nav bar and routing
        -users
            -service
            -login
            -register
            -profile: preferences if screen is medium/large
    -Add alerts right under the nav bar
    -How to do animations between:
        Modal entering the screen
        General on hover effects
        Cards leaving/entering the screen
        Switching among pages
        Expanding a card
        Dropping down a map?
    -User Authentication - make a service similar to firebaseSimpleLogin using hibbert backend
    -Change all colors and maybe type
    -Bugs
        -Make off canvas fixed?
        -Navbar becomes unfixed when offcanvas is activated
    -Tune up backend
        -Pagination
-Images
    -Add Images to Restaurants and Sources
    -Default images based on category if no images are found
    -Change out hardcoded images
-Optimization
    -Refactor Angular App
        Create directives for common elements
    -Refactor out all hard numbers and error messages 
        source controller spec 
        both location using controllers
        error messages in source and restaurant index views
    -Rewrite specs to use FactoryGirl's create_list
    -Rewrite UsersController specs with expect..change
    -Refactor Source location search
    -Add uploading of categories for restaurants
    -Recommender system that applies default weight and chooses at random if weight is near the default
    -Remove unwanted Devise modules
    -Move to memcached/memcashier for views(fragment caching) and for geocoding
    -Grab custom Foundation with only parts that are used
-Admin
    -Plan out admin backend API
    -Write rspec expectations of admin API
    -Code out admin stuff
    -Improve manual uploading
-Content
    -Seed Heroku Database
    -Automatic up-to-date for recommendations
-Future Plans
    -Welcome screen and tutorials
    -Fix up Address to save full address text
    -Add User Favorites
    -Add more fine tuning btwn ordering by location vs. ordering by recommendations
    -Search recommendation groups based on restaurant
    -Allow regular users to make personal sources/recommendations
    -Connect with other regular users to see their personal sources/recommendations
    -Perhaps allow regular users to edit sources and stuff
