TODO:
-Code out backend
    -Views
        -Write out view specs
        -Add distance for any location searches
    -Images
        -Add Images to Restaurants and Sources
        -Default images based on category if no images are found
-Code up Frontend
    -Add root route
    -Plan out JS framework
    -User Authentication
    -Tune up backend
        -Pagination
-Optimization
    -Refactor out all hard numbers and error messages 
        source controller spec 
        both location using controllers
        error messages in source and restaurant index views
    -Rewrite specs to use FactoryGirl's create_list
    -Rewrite UsersController specs with expect..change
    -Refactor Source location search
    -Add uploading of categories for restaurants
    -Recommender system that applies default weight and chooses at random if weight is near the default
    -Find out how to make sources_count a sql operation using array_length
    -Remove unwanted Devise modules
    -Move to memcached/memcashier for views(fragment caching) and for geocoding
    -Add more fine tuning btwn ordering by location vs. ordering by recommendations
-Admin
    -Plan out admin backend API
    -Write rspec expectations of admin API
    -Code out admin stuff
    -Improve manual uploading
-Content
    -Seed Heroku Database
    -Automatic up-to-date for recommendations
