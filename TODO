TODO:
-Write rspec expectations for non-admin API 
    -Write out view specs
        -Recommendation count
-Code out backend
    -Validations
        -(DONE)Add validation that a restaurant can only be recommended once per group
        -(DONE)Add validation on model names
    -Routes
        -Fix routes to match API
        -Add root route
    -Views
        -Add distance for any location searches
    -Images
        -Add Images to Restaurants and Sources
        -Default images based on category if no images are found
-Code up Frontend
    -Plan out JS framework
    -User Authentication
    -Paginate results
-Optimization
    -Rewrite specs to use FactoryGirl's create_list
    -Rewrite UsersController specs with expect..change
    -Refactor Source location search
    -Add uploading of categories for restaurants
    -Recommender system that applies default weight and chooses at random if weight is near the default
    -Find out how to make sources_count a sql operation using array_length
    -Change the restaurant showable scope to use NOT EXISTS instead of NOT IN
    -Find out how to do source_showable using SQL/scopes
    -Remove unwanted Devise modules
    -Move to memcached/memcashier
    -Add more fine tuning btwn ordering by location vs. ordering by recommendations
-Admin
    -Plan out admin backend API
    -Write rspec expectations of admin API
    -Code out admin stuff
    -Improve manual uploading
-Seed Heroku Database
-Automatic up-to-date for recommendations
